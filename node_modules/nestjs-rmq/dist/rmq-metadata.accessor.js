"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RMQMetadataAccessor = void 0;
const common_1 = require("@nestjs/common");
const core_1 = require("@nestjs/core");
const constants_1 = require("./constants");
const rmq_service_1 = require("./rmq.service");
let RMQMetadataAccessor = class RMQMetadataAccessor {
    constructor(reflector) {
        this.reflector = reflector;
    }
    getRMQPath(target) {
        return this.reflector.get(constants_1.RMQ_ROUTES_PATH, target);
    }
    getAllRMQPaths() {
        var _a;
        return (_a = Reflect.getMetadata(constants_1.RMQ_ROUTES_META, rmq_service_1.RMQService)) !== null && _a !== void 0 ? _a : [];
    }
    addRMQPath(path) {
        const paths = this.getAllRMQPaths();
        paths.push(path);
        Reflect.defineMetadata(constants_1.RMQ_ROUTES_META, paths, rmq_service_1.RMQService);
    }
    getRMQOptions(target) {
        return this.reflector.get(constants_1.RMQ_ROUTES_OPTIONS, target);
    }
    getRMQValidation(target) {
        return this.reflector.get(constants_1.RMQ_ROUTES_VALIDATE, target);
    }
    getRMQMessageIndexes(target, method) {
        var _a;
        return (_a = Reflect.getOwnMetadata(constants_1.RMQ_MESSAGE_META, target, method)) !== null && _a !== void 0 ? _a : [];
    }
};
RMQMetadataAccessor = __decorate([
    common_1.Injectable(),
    __metadata("design:paramtypes", [core_1.Reflector])
], RMQMetadataAccessor);
exports.RMQMetadataAccessor = RMQMetadataAccessor;
